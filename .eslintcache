[{"/Users/frontenddeveloper03/Desktop/storage/src/reportWebVitals.js":"1","/Users/frontenddeveloper03/Desktop/storage/src/components/Navbar/Navbar.js":"2","/Users/frontenddeveloper03/Desktop/storage/src/App.js":"3","/Users/frontenddeveloper03/Desktop/storage/src/index.js":"4","/Users/frontenddeveloper03/Desktop/storage/src/components/main/Main.js":"5","/Users/frontenddeveloper03/Desktop/storage/src/components/bucket/Bucket.js":"6"},{"size":362,"mtime":1611736756376,"results":"7","hashOfConfig":"8"},{"size":244,"mtime":1611741330782,"results":"9","hashOfConfig":"8"},{"size":567,"mtime":1611742800360,"results":"10","hashOfConfig":"8"},{"size":524,"mtime":1611737728086,"results":"11","hashOfConfig":"8"},{"size":3897,"mtime":1611757918381,"results":"12","hashOfConfig":"8"},{"size":5294,"mtime":1611763974894,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1rjjsg9",{"filePath":"16","messages":"17","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"18","messages":"19","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/frontenddeveloper03/Desktop/storage/src/reportWebVitals.js",[],"/Users/frontenddeveloper03/Desktop/storage/src/components/Navbar/Navbar.js",["28"],"/Users/frontenddeveloper03/Desktop/storage/src/App.js",["29"],"import logo from \"./logo.svg\";\nimport \"./App.css\";\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport Navbar from \"./components/Navbar/Navbar\";\nimport Main from \"./components/main/Main\";\nimport Bucket from \"./components/bucket/Bucket\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <BrowserRouter>\n        <Navbar />\n        <Switch>\n          <Route exact path=\"/\" component={Main} />\n          <Route exact path=\"/buckets/:id\" component={Bucket} />\n        </Switch>\n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n","/Users/frontenddeveloper03/Desktop/storage/src/index.js",[],"/Users/frontenddeveloper03/Desktop/storage/src/components/main/Main.js",["30"],"import React, { useState } from \"react\";\nimport * as Yup from \"yup\";\nimport { yupResolver } from \"@hookform/resolvers\";\nimport { useForm } from \"react-hook-form\";\nimport { Link } from \"react-router-dom\";\n\nlet schema = Yup.object().shape({\n  name: Yup.string().required(),\n  location: Yup.string().required(),\n});\n\nexport default function Main() {\n  const [showCreateBucketForm, setShowCreateBucketForm] = useState(false);\n  const [buckets, setBuckets] = useState([\n    { id: 1, name: \"BestStorage\", location: \"Kranj\" },\n    { id: 2, name: \"Pics\", location: \"Ljubljana\" },\n  ]);\n  const { register, handleSubmit, errors } = useForm({\n    resolver: yupResolver(schema),\n  });\n\n  const onSubmit = (data) => {\n    console.log(data);\n    /*  fetch(`/api/report/update`, {\n      method: \"post\",\n      headers: {\n        // Authorization: `Bearer ${authenticity.token(hash)}`,\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(data),\n    })\n      .then((response) => response.json())\n      .then((datas) => {\n\n      });*/\n    buckets.unshift(data);\n    setShowCreateBucketForm(false);\n  };\n  return (\n    <div className=\"container\">\n      <h1 className=\"text-left\">Bucket List</h1>\n      {showCreateBucketForm ? (\n        <div>\n          <h5 className=\"text-left pt-3\">Create New Bucket</h5>\n          <form onSubmit={handleSubmit(onSubmit)}>\n            <div className=\"row\">\n              <div className=\"col\">\n                <label className=\"text-left\">Bucket Name*</label>\n                <input\n                  type=\"text\"\n                  className=\"form-control\"\n                  placeholder=\"Bucket Name\"\n                  name=\"name\"\n                  ref={register}\n                />\n                {errors.name && (\n                  <small id=\"name\" className=\"form-text text-danger\">\n                    {errors.name.message}\n                  </small>\n                )}\n              </div>\n              <div className=\"col\">\n                <label className=\"text-left\">Bucket Location*</label>\n                <input\n                  type=\"text\"\n                  className=\"form-control\"\n                  placeholder=\"Bucket Location\"\n                  name=\"location\"\n                  ref={register}\n                />\n                {errors.location && (\n                  <small id=\"location\" className=\"form-text text-danger\">\n                    {errors.location.message}\n                  </small>\n                )}\n              </div>\n            </div>\n            <div className=\"d-flex justify-content-start py-3\">\n              <button type=\"submit\" className=\"btn btn-primary\">\n                Create Bucket\n              </button>\n            </div>\n          </form>\n        </div>\n      ) : (\n        \"\"\n      )}\n\n      <div className=\"row pt-3 d-flex justify-content-between\">\n        <h5>All Buckets(2)</h5>\n        <button\n          className=\"btn btn-primary\"\n          onClick={() => setShowCreateBucketForm(true)}\n        >\n          Create New Bucket\n        </button>\n      </div>\n      <div className=\"row py-5\">\n        <table className=\"table\">\n          <thead className=\"thead-dark\">\n            <tr>\n              <th scope=\"col\">Name</th>\n              <th scope=\"col\">Location</th>\n            </tr>\n          </thead>\n          <tbody>\n            {buckets.length > 0\n              ? buckets.map((bucket) => (\n                  <tr key={bucket.id}>\n                    <td>\n                      <Link to={`/buckets/${bucket.id}`}>{bucket.name}</Link>{\" \"}\n                    </td>\n                    <td>\n                      <Link to={`/buckets/${bucket.id}`}>\n                        {bucket.location}\n                      </Link>{\" \"}\n                    </td>\n                  </tr>\n                ))\n              : \"No buckets\"}\n          </tbody>\n        </table>\n      </div>\n    </div>\n  );\n}\n","/Users/frontenddeveloper03/Desktop/storage/src/components/bucket/Bucket.js",["31"],{"ruleId":"32","severity":1,"message":"33","line":6,"column":7,"nodeType":"34","endLine":6,"endColumn":44},{"ruleId":"35","severity":1,"message":"36","line":1,"column":8,"nodeType":"37","messageId":"38","endLine":1,"endColumn":12},{"ruleId":"35","severity":1,"message":"39","line":14,"column":19,"nodeType":"37","messageId":"38","endLine":14,"endColumn":29},{"ruleId":"35","severity":1,"message":"40","line":17,"column":9,"nodeType":"37","messageId":"38","endLine":17,"endColumn":11},"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'setBuckets' is assigned a value but never used.","'id' is assigned a value but never used."]