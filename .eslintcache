[{"/app/src/index.js":"1","/app/src/components/main/Main.js":"2","/app/src/components/bucket/BucketDetails.js":"3","/app/src/reportWebVitals.js":"4","/app/src/components/Navbar/Navbar.js":"5","/app/src/utils/Constants.js":"6","/app/src/App.js":"7","/app/src/components/bucket/Bucket.js":"8"},{"size":589,"mtime":1612186587445,"results":"9","hashOfConfig":"10"},{"size":5335,"mtime":1612188960436,"results":"11","hashOfConfig":"10"},{"size":1888,"mtime":1612187491867,"results":"12","hashOfConfig":"10"},{"size":362,"mtime":1611823332406,"results":"13","hashOfConfig":"10"},{"size":244,"mtime":1611823332404,"results":"14","hashOfConfig":"10"},{"size":116,"mtime":1612186587445,"results":"15","hashOfConfig":"10"},{"size":567,"mtime":1612186587442,"results":"16","hashOfConfig":"10"},{"size":6532,"mtime":1612191145640,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"swxeug",{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"24"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"29"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/app/src/index.js",[],["39","40"],"/app/src/components/main/Main.js",["41"],"import React, { useState, useEffect } from \"react\";\nimport * as Yup from \"yup\";\nimport { yupResolver } from \"@hookform/resolvers\";\nimport { useForm } from \"react-hook-form\";\nimport { Link } from \"react-router-dom\";\nimport { API, Token } from \"../../utils/Constants\";\n\nlet schema = Yup.object().shape({\n  name: Yup.string().required(),\n  location: Yup.string().required(),\n});\n\nexport default function Main() {\n  const [loading, setLoading] = useState(false);\n  const [showCreateBucketForm, setShowCreateBucketForm] = useState(false);\n  const [buckets, setBuckets] = useState([]);\n  const [success, setSuccess] = useState(false);\n  const [fail, setFail] = useState(false);\n  const { register, handleSubmit, errors } = useForm({\n    resolver: yupResolver(schema),\n  });\n\n  const onSubmit = (data) => {\n    console.log(data);\n    fetch(`${API}/buckets`, {\n      method: \"post\",\n      headers: {\n        Authorization: `Token ${Token}`,\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(data),\n    })\n      .then((response) => {\n        console.log(response.status); // Will show you the status\n        if (response.status === 200 || response.status === 201) {\n          setSuccess(true);\n        } else {\n          setFail(true);\n        }\n        return response.json();\n      })\n      .then((datas) => {\n        console.log(datas);\n        if (datas.bucket) {\n          buckets.unshift(datas.bucket);\n        }\n      });\n\n    setShowCreateBucketForm(false);\n  };\n\n  useEffect(() => {\n    fetch(\n      `${API}/buckets`,\n      {\n        method: \"get\",\n        headers: {\n          Authorization: `Token ${Token}`,\n          \"Content-Type\": \"application/json\",\n        },\n      },\n      setLoading(true)\n    )\n      .then((response) => response.json())\n      .then((datas) => {\n        setLoading(false);\n        console.log(datas);\n        setBuckets(datas.buckets);\n      });\n  }, []);\n\n  return (\n    <div className=\"container\">\n      <h1 className=\"text-left\">Bucket List</h1>\n      {success ? (\n        <div class=\"alert alert-success\" role=\"alert\">\n          {setTimeout(function () {\n            setSuccess(false);\n          }, 3000)}\n          Bucket created successfully!\n        </div>\n      ) : (\n        \"\"\n      )}\n      {fail ? (\n        <div class=\"alert alert-danger\" role=\"alert\">\n          {setTimeout(function () {\n            setFail(false);\n          }, 3000)}\n          Bucket creation failed, try again.\n        </div>\n      ) : (\n        \"\"\n      )}\n      {showCreateBucketForm ? (\n        <div>\n          <h5 className=\"text-left pt-3\">Create New Bucket</h5>\n          <form onSubmit={handleSubmit(onSubmit)}>\n            <div className=\"row\">\n              <div className=\"col\">\n                <label className=\"text-left\">Bucket Name*</label>\n                <input\n                  type=\"text\"\n                  className=\"form-control\"\n                  placeholder=\"Bucket Name\"\n                  name=\"name\"\n                  ref={register}\n                />\n                {errors.name && (\n                  <small id=\"name\" className=\"form-text text-danger\">\n                    {errors.name.message}\n                  </small>\n                )}\n              </div>\n              <div className=\"col\">\n                <label className=\"text-left\">Bucket Location*</label>\n                <input\n                  type=\"text\"\n                  className=\"form-control\"\n                  placeholder=\"Bucket Location\"\n                  name=\"location\"\n                  ref={register}\n                />\n                {errors.location && (\n                  <small id=\"location\" className=\"form-text text-danger\">\n                    {errors.location.message}\n                  </small>\n                )}\n              </div>\n            </div>\n            <div className=\"d-flex justify-content-start py-3\">\n              <button type=\"submit\" className=\"btn btn-primary\">\n                Create Bucket\n              </button>\n            </div>\n          </form>\n        </div>\n      ) : (\n        \"\"\n      )}\n\n      <div className=\"row pt-3 d-flex justify-content-between\">\n        <h5>All Buckets({buckets.length})</h5>\n        <button\n          className=\"btn btn-primary\"\n          onClick={() => setShowCreateBucketForm(true)}\n        >\n          Create New Bucket\n        </button>\n      </div>\n      <div className=\"row py-5\">\n        <table className=\"table\">\n          <thead className=\"thead-dark\">\n            <tr>\n              <th scope=\"col\">Name</th>\n              <th scope=\"col\">Location</th>\n            </tr>\n          </thead>\n\n          <tbody>\n            {buckets.length > 0 ? (\n              buckets.map((bucket) => (\n                <tr key={bucket.id}>\n                  <td>\n                    <Link to={`/buckets/${bucket.id}`}>{bucket.name}</Link>{\" \"}\n                  </td>\n                  <td>\n                    <Link to={`/buckets/${bucket.id}`}>\n                      {bucket.location.name}\n                    </Link>{\" \"}\n                  </td>\n                </tr>\n              ))\n            ) : (\n              <div className=\"d-flex justify-content-center text-center\">\n                <strong>Loading...</strong>\n              </div>\n            )}\n          </tbody>\n        </table>\n      </div>\n    </div>\n  );\n}\n",["42","43"],"/app/src/components/bucket/BucketDetails.js",[],"/app/src/reportWebVitals.js",[],["44","45"],"/app/src/components/Navbar/Navbar.js",["46"],"import React from \"react\";\n\nexport default function Navbar() {\n  return (\n    <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\n      <a className=\"navbar-brand\" href=\"#\">\n        Secure cloud storage\n      </a>\n    </nav>\n  );\n}\n","/app/src/utils/Constants.js",[],"/app/src/App.js",["47"],"/app/src/components/bucket/Bucket.js",[],{"ruleId":"48","replacedBy":"49"},{"ruleId":"50","replacedBy":"51"},{"ruleId":"52","severity":1,"message":"53","line":14,"column":10,"nodeType":"54","messageId":"55","endLine":14,"endColumn":17},{"ruleId":"48","replacedBy":"56"},{"ruleId":"50","replacedBy":"57"},{"ruleId":"48","replacedBy":"58"},{"ruleId":"50","replacedBy":"59"},{"ruleId":"60","severity":1,"message":"61","line":6,"column":7,"nodeType":"62","endLine":6,"endColumn":44},{"ruleId":"52","severity":1,"message":"63","line":1,"column":8,"nodeType":"54","messageId":"55","endLine":1,"endColumn":12},"no-native-reassign",["64"],"no-negated-in-lhs",["65"],"no-unused-vars","'loading' is assigned a value but never used.","Identifier","unusedVar",["64"],["65"],["64"],["65"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'logo' is defined but never used.","no-global-assign","no-unsafe-negation"]